{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\work\\\\edigitech_ht_ui\\\\src\\\\components\\\\pages\\\\UI\\\\Currency.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport Dropdown from 'react-dropdown';\nimport { HiSwitchHorizontal } from 'react-icons/hi';\nimport 'react-dropdown/style.css';\nimport './currency.css';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Currency = () => {\n  _s();\n\n  const [info, setInfo] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [from, setFrom] = useState(\"usd\");\n  const [to, setTo] = useState(\"inr\");\n  const [options, setOptions] = useState([]);\n  const [output, setOutput] = useState(0);\n  useEffect(() => {\n    Axios.get(`https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies/${from}.json`).then(res => {\n      setInfo(res.data[from]);\n    });\n  }, [from]);\n  useEffect(() => {\n    setOptions(Object.keys(info));\n    convert();\n  }, [info]);\n\n  function convert() {\n    var rate = info[to];\n    setOutput(input * rate);\n  } // Function to switch between two currency\n\n\n  function flip() {\n    var temp = from;\n    setFrom(to);\n    setTo(temp);\n  }\n\n  function reset() {\n    setFrom(\"usd\");\n    setTo(\"inr\");\n    setInput(\"0\");\n    setInput.value = null;\n    setOutput.value = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"currencycontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"middle\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"From\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          options: options,\n          onChange: e => {\n            setFrom(e.value);\n          },\n          value: from,\n          placeholder: \"From\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"switch\",\n        children: /*#__PURE__*/_jsxDEV(HiSwitchHorizontal, {\n          size: \"30px\",\n          onClick: () => {\n            flip();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          options: options,\n          onChange: e => {\n            setTo(e.value);\n          },\n          value: to,\n          placeholder: \"To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter the amount\",\n          value: input,\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          convert();\n        },\n        children: \"Convert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 8\n      }, this), \" \\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          reset();\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Converted Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: input + \" \" + from + \" = \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"#F44D2D\"\n        },\n        children: +output.toFixed(2) + \" \" + to\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Currency, \"ERsuxePggof1/7K5It7gIXz5Ke8=\");\n\n_c = Currency;\nexport default Currency;\n\nvar _c;\n\n$RefreshReg$(_c, \"Currency\");","map":{"version":3,"sources":["C:/Users/Lenovo/work/edigitech_ht_ui/src/components/pages/UI/Currency.js"],"names":["React","useEffect","useState","Axios","Dropdown","HiSwitchHorizontal","Button","Currency","info","setInfo","input","setInput","from","setFrom","to","setTo","options","setOptions","output","setOutput","get","then","res","data","Object","keys","convert","rate","flip","temp","reset","value","e","target","color","toFixed"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport Dropdown from 'react-dropdown';\r\nimport { HiSwitchHorizontal } from 'react-icons/hi';\r\nimport 'react-dropdown/style.css';\r\nimport './currency.css';\r\nimport Button from '@mui/material/Button';\r\nconst Currency = () => {\r\n  const [info, setInfo] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [from, setFrom] = useState(\"usd\");\r\n  const [to, setTo] = useState(\"inr\");\r\n  const [options, setOptions] = useState([]);\r\n  const [output, setOutput] = useState(0);\r\n  useEffect(() => {\r\n    Axios.get(\r\n`https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies/${from}.json`)\r\n   .then((res) => {\r\n      setInfo(res.data[from]);\r\n    })\r\n  }, [from]);\r\n  useEffect(() => {\r\n    setOptions(Object.keys(info));\r\n    convert();\r\n  }, [info])\r\n\r\n  function convert() {\r\n    var rate = info[to];\r\n    setOutput(input * rate);\r\n  }\r\n  \r\n  // Function to switch between two currency\r\n  function flip() {\r\n    var temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n    \r\n  }\r\n  function reset (){\r\n    setFrom(\"usd\");\r\n    setTo(\"inr\");\r\n    setInput(\"0\");\r\n    setInput.value=null;\r\n    setOutput.value=null;\r\n    }\r\n    return (\r\n       <>\r\n      \r\n      <div className=\"currencycontainer\">\r\n        <div className=\"middle\">\r\n          <h3>From</h3>\r\n          <Dropdown options={options} \r\n                    onChange={(e) => { setFrom(e.value) }}\r\n          value={from} placeholder=\"From\" />\r\n        </div>\r\n        <div className=\"switch\">\r\n          <HiSwitchHorizontal size=\"30px\" \r\n                        onClick={() => { flip()}}/>\r\n        </div>\r\n        <div className=\"right\">\r\n          <h3>To</h3>\r\n          <Dropdown options={options} \r\n                    onChange={(e) => {setTo(e.value)}} \r\n          value={to} placeholder=\"To\"  />\r\n        </div>\r\n   \r\n         <div >\r\n          <h3>Amount</h3>\r\n          <input type=\"text\" \r\n             placeholder=\"Enter the amount\" \r\n             value={input}\r\n             onChange={(e) => setInput(e.target.value)} />\r\n        </div>\r\n      </div>\r\n      <div className=\"result\">\r\n       <Button variant=\"contained\"  onClick={()=>{convert()}}>Convert</Button> &nbsp; &nbsp;\r\n       <Button variant=\"contained\"  onClick={()=>{reset()}}>Reset</Button>\r\n        <h2>Converted Amount:</h2>\r\n        <p>{input+\" \"+from+\" = \"}</p><p style={{color:\"#F44D2D\"}}>{+output.toFixed(2) + \" \" + to}</p>\r\n  \r\n      </div>\r\n    \r\n       </>\r\n    )\r\n}\r\n\r\nexport default Currency;\r\n"]},"metadata":{},"sourceType":"module"}